variables:
  PLAN: plan.tfplan
  PLAN_FILE_JSON: tfplan.json
  TF_CLOUD_CREDENTIALS: |
    credentials "app.terraform.io" {
      token = "${TF_TOKEN}"
    }

stages:
  - validate
  - plan
  - apply
  - destroy

image:
  name: hashicorp/terraform:light
  entrypoint: [""]
  pull_policy: [always, if-not-present]

before_script:
  - apk add --update jq
  - alias convert_report="jq -r '([.resource_changes[]?.change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
  - terraform --version
  - echo "${TF_CLOUD_CREDENTIALS}" > "${HOME}/.terraformrc"
  - terraform init

cache:
  key: "$CI_COMMIT_SHA"
  paths:
    - .terraform

validate:
  stage: validate
  script:
    - terraform validate
  tags:
    - dev

plan:
  stage: plan
  script:
    - terraform plan -out $PLAN 
    - terraform show -json $PLAN | convert_report > $PLAN_FILE_JSON
  dependencies:
    - validate
  artifacts:
    reports:
      terraform: ${PLAN_FILE_JSON}
    paths:
      - ${PLAN}
  tags:
    - dev

apply:
  stage: apply
  script:
    - terraform apply $PLAN
  dependencies:
    - plan
  when: manual
  tags:
    - dev

destroy:
  stage: destroy
  script:
    - terraform apply -destroy $PLAN
  when: manual
  tags:
    - dev